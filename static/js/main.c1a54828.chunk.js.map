{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/usePlayer.js","hooks/useStage.js","components/styles/StyledCell.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","console","log","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","usePlayer","useState","collided","setPlayer","resetPlayer","useCallback","STAGE_WIDTH","prev","dir","clonedPlayer","JSON","parse","stringify","matrix","rotatedTetro","map","_","index","col","row","reverse","rotate","useStage","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","cell","forEach","value","reduce","ack","findIndex","unshift","push","sweepRows","StyledCell","props","type","React","memo","StyledStage","height","width","Stage","key","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c1a54828.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, \"clear\"])\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y += 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\r\n      // 1 Check that we'ro on an actual tetromino cell\r\n      if (player.tetromino[y][x] !== 0) {\r\n        if (\r\n          //2 CHeck that our move is inside the geme areas height (y)\r\n          // We shouldn't go through th bottom of th play are\r\n          !stage[y + player.pos.y + moveY] ||\r\n          //3 Check that our move is inside the game areas width (x)\r\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          //4 Chcek that the cell we're moving to isn't set to clear\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n            \"clear\"\r\n        ) {\r\n          console.log(\"collision\");\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport bgImage from '../../img/bg.png'\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\nwidth: 100vw;\r\nheight: 100vh;\r\nbackground: url(${bgImage}) #000;\r\nbackground-size: cover;\r\noverflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\ndisplay: flex;\r\nalgin-itemst: flex-start;\r\npadding: 40px;\r\nmargin: 0px auto;\r\nmax-width: 900px;\r\naside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20xp;\r\n    margin-left: 20px;\r\n}\r\n`;","export const TETROMINOS = {\r\n        0: { shape: [[0]], color: '0, 0, 0'},\r\n        I: {\r\n            shape: [\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0],\r\n                [0, 'I', 0, 0]\r\n                ],\r\n                color: '80, 227, 230',\r\n            },\r\n        J: {\r\n            shape: [\r\n                [0, 'J', 0],\r\n                [0, 'J', 0],\r\n                ['J', 'J', 0],\r\n                ],\r\n                color: '36, 95, 223',\r\n            },\r\n        L: {\r\n            shape: [\r\n                [0, 'L', 0],\r\n                [0, 'L', 0],\r\n                [0, 'L', 'L'],\r\n                ],\r\n                color: '223, 173, 36',\r\n            },\r\n        O: {\r\n            shape: [\r\n                ['O', 'O'],\r\n                ['O', 'O']\r\n                ],\r\n                color: '223, 173, 36',\r\n            },\r\n        S: {\r\n            shape: [\r\n                [0, 'S', 'S'],\r\n                ['S', 'S', 0],\r\n                [0, 0, 0]\r\n                ],\r\n                color: '48, 211, 56',\r\n            },\r\n        T: {\r\n            shape: [\r\n                [0, 0, 0],\r\n                ['T', 'T', 'T'],\r\n                [0, 'T', 0]\r\n                ],\r\n                color: '132, 61, 198',\r\n            },\r\n            Z: {\r\n                shape: [\r\n                    ['Z', 'Z', 0],\r\n                    [0, 'Z', 'Z'],\r\n                    [0, 0, 0]\r\n                    ],\r\n                    color: '227, 78, 78',\r\n                }\r\n}\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = \r\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n    return TETROMINOS[randTetromino];\r\n}","import { useState, useCallback } from \"react\";\r\nimport { STAGE_WIDTH } from \"../gameHelpers\";\r\nimport { TETROMINOS, randomTetromino } from \"../tetrominos\";\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false\r\n  });\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer(prev => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided\r\n    }));\r\n  };\r\n\r\n  const rotate = (matrix, dir) => {\r\n    // Make the rows to become cals (transpose)\r\n    const rotatedTetro = matrix.map((_, index) =>\r\n      matrix.map(col => col[index])\r\n    );\r\n    //Reverse each row to get a rotated matrix\r\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n    return rotatedTetro.reverse();\r\n  };\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    setPlayer(clonedPlayer);\r\n  };\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false\r\n    });\r\n  }, []);\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { createStage } from \"../gameHelpers\";\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n    const sweepRows = newStage =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n          setRowsCleared(prev => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, \"clear\"]));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, []);\r\n    const updateStage = prevStage => {\r\n      // First flush the stage\r\n      const newStage = prevStage.map(row =>\r\n        row.map(cell => (cell[1] === \"clear\" ? [0, \"clear\"] : cell))\r\n      );\r\n\r\n      // Then draw the tetromino\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? \"merged\" : \"clear\"}`\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      // Then chceck if we collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return sweepRows(newStage);\r\n      }\r\n      return newStage;\r\n    };\r\n    setStage(prev => updateStage(prev));\r\n  }, [player, resetPlayer]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div `\r\nwidth: auto;\r\nbackground: rgba(${props => props.color}, 0.8);\r\nborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\nborder-bottom-color: rgba(${props => props.color}, 0.1);\r\nborder-right-color: rgba(${props => props.color}, 1);\r\nborder-top-color: rgba(${props => props.color}, 1);\r\nborder-left-color: rgba(${props => props.color}, 0.3);\r\n\r\n`","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => (\r\n    <StyledCell type={type} color={TETROMINOS[type].color}/>\r\n)\r\n\r\nexport default React.memo(Cell);","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\ndisplay: grid;\r\ngrid-template-rows: repeat(\r\n    ${props => props.height},\r\n    calc(25vw / ${props => props.width})\r\n);\r\ngrid-template-columns: repeat(${props => props.width}, 1fr);\r\ngrid-gap: 1px;\r\nborder: 2px solid #333;\r\nwidth: 100%;\r\nmax-width: 25vw;\r\nbackground: #111;\r\n`","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport { StyledStage} from './styles/StyledStage';\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n  </StyledStage>\r\n);\r\n\r\nexport default Stage;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\nbox-sizing: border-box;\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 0 0 20px 0;\r\npadding: 20px;\r\nborder: 4px solid #333;\r\nmin-height: 30px;\r\nwidth: 100%;\r\nborder-radius: 20px;\r\ncolor: ${props => (props.gameOver ? 'red' : '#999')};\r\nbackground: #000;\r\nfont-family: Pixel, Arial, Helvetica, sans-serif;\r\nfont-size: 0.8rem;\r\n`;","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text}) => (\r\n    <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n)\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\nbox-sizing: border-box;\r\nmargin: 0 0 20px 0;\r\npadding: 20px;\r\nmin-height: 30px;\r\nwidth: 100%;\r\nborder-radius: 20px;\r\nborder: none;\r\ncolor: white;\r\nbackground: #333;\r\nfont-family: Pixel, Arial, Helvetica, sans-serif;\r\nfont-size: 1rem;\r\noutline: none;\r\ncursor: pointer;\r\n`;","import React from \"react\";\r\nimport { StyledStartButton } from './styles/StyledStartButton';\r\n\r\nconst StartButton = ({ callback }) => (\r\n<StyledStartButton onClick={callback}>StartGame</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { createStage, checkCollision } from \"../gameHelpers\";\r\n\r\n// Styled Components\r\nimport { StyledTetrisWrapper, StyledTetris } from \"./styles/StyledTetris\";\r\n\r\n// Custom Hooks\r\nimport { usePlayer } from \"../hooks/usePlayer\";\r\nimport { useStage } from \"../hooks/useStage\";\r\nimport { useInterval } from \"../hooks/useInterval\";\r\nimport { useGameStatus } from \"../hooks/useGameStatus\";\r\n\r\n// Components\r\nimport Stage from \"./Stage\";\r\nimport Display from \"./Display\";\r\nimport StartButton from \"./StartButton\";\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\r\n    rowsCleared\r\n  );\r\n  const movePlayer = dir => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    console.log(\"test\");\r\n    // Reset everything\r\n    setStage(createStage());\r\n    setDropTime(500);\r\n    resetPlayer();\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setRows(0);\r\n    setLevel(0);\r\n  };\r\n\r\n  const drop = () => {\r\n    // Incerase level when player has cleaned 10 rows\r\n    if (rows > (level + 1) * 5) {\r\n      setLevel(prev => prev + 1);\r\n      //Also Increase speed\r\n      setDropTime(500 / (level + 1) + 200);\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      // Game Over\r\n      if (player.pos.y < 1) {\r\n        console.log(\"Game Over!!!\");\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 40) {\r\n        setDropTime(500 / (level + 1) + 200);\r\n        console.log(\"Interval on\");\r\n      }\r\n    }\r\n  };\r\n  const dropPlayer = () => {\r\n    console.log(\"Interval off\");\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role=\"button\"\r\n      tabIndex=\"0\"\r\n      onKeyDown={e => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text=\"Game Over\" />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`Rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n          ;\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n  const calcScore = useCallback(() => {\r\n    // We have score\r\n    if (rowsCleared > 0) {\r\n      //This is how original Tetris score is calculated\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => {\r\n        clearInterval(id);\r\n      };\r\n    }\r\n  }, [delay]);\r\n}","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";"],"sourceRoot":""}